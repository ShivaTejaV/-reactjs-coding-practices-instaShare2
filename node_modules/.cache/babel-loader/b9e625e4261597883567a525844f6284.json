{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/instaShare/src/components/UserStories/index.js\";\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Slider from 'react-slick';\nimport Cookies from 'js-cookie';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS'\n};\nconst settings = {\n  dots: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 3,\n  slidesToScroll: 3\n};\nclass UserStories extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userStories: [],\n      apiStatus: apiStatusConstants.initial\n    };\n    this.getUserStories = async () => {\n      const jwtToken = Cookies.get('jwt_token');\n      console.log(jwtToken);\n      this.setState({\n        apiStatus: apiStatusConstants.inProcess\n      });\n      const apiUrl = 'https://apis.ccbp.in/insta-share/stories';\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n      const response = await fetch(apiUrl, options);\n      console.log(response);\n      if (response.ok === true) {\n        const data = await response.json();\n        const updatedData = data.users_stories.map(eachStory => ({\n          storyUrl: eachStory.story_url,\n          userId: eachStory.user_id,\n          userName: eachStory.user_name\n        }));\n        this.setState({\n          userStories: updatedData,\n          apiStatus: apiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiStatusConstants.failure\n        });\n      }\n    };\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container-story\",\n      \"data-testid\": \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Oval\",\n        color: \"#3b82f6\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this);\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"failure-view-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://res.cloudinary.com/dngrmtiw7/image/upload/v1679237729/CCBP/REACT_MiniProject_instaShare/Home_Route/failure_symbol_nqxwbx.jpg\",\n        alt: \"failure-view\",\n        className: \"failure-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"failure-view-heading\",\n        children: \"Something went wrong.Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"retry-button\",\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this);\n    this.renderSuccessView = () => {\n      const {\n        userStories\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        children: userStories.map(each => {\n          const {\n            userId,\n            userName,\n            storyUrl\n          } = each;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: storyUrl,\n              alt: \"user-story\",\n              className: \"story-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"user-name\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this);\n    };\n    this.renderViewBasedOnStatus = () => {\n      const {\n        apiStatus\n      } = this.state;\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderSuccessView();\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n        case apiStatusConstants.inProcess:\n          return this.renderLoadingView();\n        default:\n          return null;\n      }\n    };\n  }\n  componentDidMount() {\n    this.getUserStories();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slick-container\",\n        children: this.renderViewBasedOnStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default UserStories;","map":{"version":3,"names":["Component","Loader","Slider","Cookies","jsxDEV","_jsxDEV","apiStatusConstants","initial","success","failure","inProcess","settings","dots","infinite","speed","slidesToShow","slidesToScroll","UserStories","constructor","args","state","userStories","apiStatus","getUserStories","jwtToken","get","console","log","setState","apiUrl","options","method","headers","Authorization","response","fetch","ok","data","json","updatedData","users_stories","map","eachStory","storyUrl","story_url","userId","user_id","userName","user_name","renderLoadingView","className","children","type","color","height","width","fileName","_jsxFileName","lineNumber","columnNumber","renderFailureView","src","alt","renderSuccessView","each","renderViewBasedOnStatus","componentDidMount","render"],"sources":["/home/workspace/reactjs/coding-practices/instaShare/src/components/UserStories/index.js"],"sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Slider from 'react-slick'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nconst settings = {\n  dots: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 3,\n  slidesToScroll: 3,\n}\n\nclass UserStories extends Component {\n  state = {\n    userStories: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getUserStories()\n  }\n\n  getUserStories = async () => {\n    const jwtToken = Cookies.get('jwt_token')\n    console.log(jwtToken)\n    this.setState({apiStatus: apiStatusConstants.inProcess})\n    const apiUrl = 'https://apis.ccbp.in/insta-share/stories'\n    const options = {\n      method: 'GET',\n      headers: {Authorization: `Bearer ${jwtToken}`},\n    }\n\n    const response = await fetch(apiUrl, options)\n    console.log(response)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = data.users_stories.map(eachStory => ({\n        storyUrl: eachStory.story_url,\n        userId: eachStory.user_id,\n        userName: eachStory.user_name,\n      }))\n\n      this.setState({\n        userStories: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container-story\" data-testid=\"loader\">\n      <Loader type=\"Oval\" color=\"#3b82f6\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-container\">\n      <img\n        src=\"https://res.cloudinary.com/dngrmtiw7/image/upload/v1679237729/CCBP/REACT_MiniProject_instaShare/Home_Route/failure_symbol_nqxwbx.jpg\"\n        alt=\"failure-view\"\n        className=\"failure-image\"\n      />\n      <h1 className=\"failure-view-heading\">\n        Something went wrong.Please try again\n      </h1>\n      {/* <p className=\"failure-view-text\"></p> */}\n      <button type=\"button\" className=\"retry-button\">\n        Try again\n      </button>\n    </div>\n  )\n\n  renderSuccessView = () => {\n    const {userStories} = this.state\n    return (\n      <Slider {...settings}>\n        {userStories.map(each => {\n          const {userId, userName, storyUrl} = each\n          return (\n            <li className=\"list-item\" key={userId}>\n              <img src={storyUrl} alt=\"user-story\" className=\"story-image\" />\n              <h1 className=\"user-name\">{userName}</h1>\n            </li>\n          )\n        })}\n      </Slider>\n    )\n  }\n\n  renderViewBasedOnStatus = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"slick-container\">{this.renderViewBasedOnStatus()}</div>\n      </div>\n    )\n  }\n}\n\nexport default UserStories\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}